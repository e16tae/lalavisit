name: Sync Develop with Main

on:
  push:
    branches:
      - main
    paths:
      - 'k8s/overlays/production/deployment-patch.yaml'

permissions:
  contents: write
  issues: write

jobs:
  sync-develop:
    name: Sync develop branch
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge main into develop
        id: merge
        run: |
          # Fetch latest main
          git fetch origin main

          echo "## üîÑ Syncing Develop with Main" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Attempt merge
          if git merge origin/main -m "chore: sync K8s manifests from main [skip ci]"; then
            echo "merge_status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ Merge successful" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Get the changes
            CHANGES=$(git diff HEAD~1 HEAD --name-only)
            echo "**Changed files:**" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "$CHANGES" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
            echo "‚ùå Merge conflict detected" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Conflicting files:**" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            git diff --name-only --diff-filter=U >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

            # Abort the merge
            git merge --abort
            exit 1
          fi

      - name: Push changes
        if: steps.merge.outputs.merge_status == 'success'
        run: |
          git push origin develop
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Changes pushed to develop branch" >> $GITHUB_STEP_SUMMARY

      - name: Create issue on conflict
        if: failure() && steps.merge.outputs.merge_status == 'conflict'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ö†Ô∏è Merge Conflict: main ‚Üí develop sync failed',
              body: `## Merge Conflict Detected

            The automatic sync from \`main\` to \`develop\` failed due to merge conflicts.

            **Commit:** ${context.sha}
            **Workflow Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}

            ### Action Required
            Please manually resolve the merge conflict:

            \`\`\`bash
            git checkout develop
            git pull origin develop
            git merge origin/main
            # Resolve conflicts
            git commit
            git push origin develop
            \`\`\`

            This issue will be automatically closed once the conflict is resolved.`,
              labels: ['merge-conflict', 'automated']
            });

            console.log('Created issue:', issue.data.number);
